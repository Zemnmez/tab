syntax = "proto3";
package types;

option go_package = "github.com/zemnmez/tab/types";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.stringer_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.enum_stringer_all) = true;

// tab

message ID { string id = 1; }

// authn



// Authz


message AuthorizationGrantID { ID id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false]; }

message AuthorizationGrant {
    AuthorizationGrantID id = 1;
    UserID from = 2;
    UserID to = 3;
    repeated Authorization permissions = 4;
}

enum Authorization {
    AUTHORIZATION_NIL = 0;
    VIEW_USERS = 1;
    MODIFY_VALID_AUTH = 2;
    ADD_ITEMS = 3;
    MODIFY_OTHER_USERS = 4;
    MODIFY_SINGLETON_USERS = 5;
    MODIFY_SELF = 6;
    VIEW_OTHER_USERS_HISTORY = 7;
    VIEW_OWN_HISTORY = 8;
}

// HISTORY

message HistoryID { ID id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false]; }

message HistoryItem {
    string action = 1;
    UserID by = 2;
    string requestData = 3;
    string IPAddress = 4;
}

// USERS

enum SingletonUserType {
    SINGLETONUSERTYPE_NIL = 0;
    ROOT = 1;
    ANONYMOUS = 2;
}

message SingletonUser {
    UserID id = 1;
    SingletonUserType type = 2;
}

message UserID { ID id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false]; }

message User {
    UserID id = 1;
    string name = 2;
    repeated Authorization authorizations = 3;
    repeated HistoryID historyID = 4;
    google.protobuf.Timestamp created = 5 [(gogoproto.stdtime) = true];
}

// item

message ItemID { ID id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false]; }

message Item {
    ItemID id = 1;
    string name = 2;
    string location = 3;
    ItemID parent = 4;
    repeated ItemID children = 5;
}

// oidc

message OIDCProviderID { ID id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false]; }

message OIDCProvider {
    OIDCProviderID id = 1;
    string name = 2;
    string callback = 3;
    string authorizationEndpoint = 4;
    string clientID = 5;
}


// token

message AuthorizationTokenID { ID id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false]; }

message AuthorizationTokenInfo {
    AuthorizationTokenID id = 1;
    AuthorizationGrantID grant = 2;
    google.protobuf.Timestamp expires = 3;
    google.protobuf.Timestamp created = 4;

}

// link

message LinkID { ID id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false]; }

message Link {
    LinkID id = 1;
    string targetIssuer = 2;
    string targetSubject = 3;
}

enum TableID {
    TABLE_NIL = 0;

    DEFAULT_TABLE = 1;
    LINKS_TABLE = 2;
}

message TableName {
    TableID id = 1;
}