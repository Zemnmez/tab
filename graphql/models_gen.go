// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graphql

import (
	"github.com/zemnmez/tab/types"
)

type User interface {
	IsUser()
}

type UserMutator interface {
	IsUserMutator()
}

type AnonymousUser struct {
	ID   types.SpecialUserID `json:"ID"`
	Name string              `json:"Name"`
}

type AuthenticationMutation struct {
	Etc  *string       `json:"etc"`
	Oidc *OIDCMutation `json:"OIDC"`
}

type AuthenticationQuery struct {
	Etc  *string    `json:"etc"`
	Oidc *OIDCQuery `json:"OIDC"`
}

type DefinedItemInput struct {
	Name     string       `json:"Name"`
	Location string       `json:"Location"`
	Parent   *ItemInput   `json:"Parent"`
	Children []*ItemInput `json:"Children"`
}

type ItemInput struct {
	ByID          *types.ItemID     `json:"ById"`
	WithStructure *DefinedItemInput `json:"WithStructure"`
}

type OIDCMutation struct {
	Authenticate User          `json:"Authenticate"`
	Provider     *OIDCProvider `json:"Provider"`
}

type OIDCProvider struct {
	ID                    *string `json:"ID"`
	Name                  string  `json:"Name"`
	Callback              string  `json:"Callback"`
	AuthorizationEndpoint string  `json:"AuthorizationEndpoint"`
	ClientID              string  `json:"ClientID"`
}

type OIDCProviderInput struct {
	Name string `json:"Name"`
}

type OIDCProviderQuery struct {
	All  []*OIDCProvider `json:"All"`
	ByID *OIDCProvider   `json:"ByID"`
}

type OIDCQuery struct {
	Provider *OIDCProviderQuery `json:"Provider"`
	IsValid  *bool              `json:"IsValid"`
}

type RootUser struct {
	ID   types.SpecialUserID `json:"ID"`
	Name string              `json:"Name"`
}

type Self struct {
	Name           string                      `json:"Name"`
	Authentication *UserAuthentication         `json:"Authentication"`
	Grants         []*types.AuthorizationGrant `json:"Grants"`
	Authorizatons  []types.Authorization       `json:"Authorizatons"`
	// Grant a user some ability the current user has
	Grant User `json:"Grant"`
	// Grant a special user some ability the current user has
	GrantSpecial *types.SpecialUser   `json:"GrantSpecial"`
	History      []*types.HistoryItem `json:"History"`
}

func (Self) IsUser() {}

type UserAuthentication struct {
	Etc  *string          `json:"etc"`
	Oidc []*types.IDToken `json:"OIDC"`
}

type UserInput struct {
	Name string `json:"Name"`
}

type UserMutation struct {
	Self    UserMutator `json:"Self"`
	Special UserMutator `json:"Special"`
	Regular UserMutator `json:"Regular"`
}

type UserQuery struct {
	Self    *Self              `json:"Self"`
	Special *types.SpecialUser `json:"Special"`
	Regular *types.RegularUser `json:"Regular"`
	WhoCan  []User             `json:"WhoCan"`
}
