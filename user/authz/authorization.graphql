directive @authorized(to: [Authorization!]!) on FIELD_DEFINITION

"""
Authorization is a list of all the possible permissions
a User can have.
"""
enum Authorization @goModel(model: "github.com/zemnmez/tab/user/authz.Authorization") {
    VIEW_USERS
}

type AuthorizationGrant @goModel(model: "github.com/zemnmez/tab/user/authz.Grant") {
    """
    From is the user which has granted permissions
    to the grantee
    """
    From: User!

    """
    Of is a list of Authorizations representing
    permissions granted to the user.
    """
    Of: [Authorization!]!

    """
    Valid returns if this grant is still valid.
    if the granter of this authorization does not
    have the appropriate permissions anymore,
    the grant is no longer valid.
    """
    Valid: Boolean
}

extend interface User {

    "The abilities granted to this user."
    Grants: [AuthorizationGrant!]!
}

extend type Self {
    Grants: [AuthorizationGrant!]!
    Authorizatons: [Authorization!]!

    "Grant a user some ability the current user has"
    Grant(who: RegularUserID, abilities: [Authorization!]!): User

    "Grant a special user some ability the current user has"
    GrantSpecial(who: SpecialUserID, abilities: [Authorization!]!): SpecialUser @authorized(to: [MODIFY_SPECIAL_USERS])
}

extend type SpecialUser {
    """
    Authorizations represents the things a user can do,
    and who granted them the ability to do these things.
    
    If the user was granted an ability by a user, and the granting user
    user lost the ability to grant it, it is no longer valid.
    """
    Grants: [AuthorizationGrant!]!

    """
    Authorizations represents the set of authorization grants
    given to this user which are still valid.
    """
    Authorizations: [Authorization!]!
}

extend type RegularUser {
    """
    Authorizations represents the things a user can do,
    and who granted them the ability to do these things.
    
    If the user was granted an ability by a user, and the granting user
    user lost the ability to grant it, it is no longer valid.
    """
    Grants: [AuthorizationGrant!]!

    """
    Authorizations represents the set of authorization grants
    given to this user which are still valid.
    """
    Authorizations: [Authorization!]!
}

extend type UserQuery {
    WhoCan(do: [Authorization!]!): [User!]!
        @authorized(to: [VIEW_USERS]),
        @goField(model: "github.com/zemnmez/tab/storage.GetUsersByAuthorization")
}