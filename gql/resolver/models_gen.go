// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package resolver

import (
	"time"

	"github.com/zemnmez/tab/types"
)

type AnonymousUser struct {
	ID   types.SpecialUserID `json:"ID"`
	Name string              `json:"Name"`
}

type DefinedItemInput struct {
	Name     string       `json:"Name"`
	Location string       `json:"Location"`
	Parent   *ItemInput   `json:"Parent"`
	Children []*ItemInput `json:"Children"`
}

type IDTokenInput struct {
	Issuer                              string    `json:"Issuer"`
	Subject                             string    `json:"Subject"`
	Audience                            string    `json:"Audience"`
	Expiration                          time.Time `json:"Expiration"`
	Issued                              time.Time `json:"Issued"`
	Nonce                               string    `json:"Nonce"`
	AuthenticationContextClassReference *int      `json:"AuthenticationContextClassReference"`
	AuthenticationMethodsReference      []string  `json:"AuthenticationMethodsReference"`
	AuthorizedParty                     *string   `json:"AuthorizedParty"`
}

type ItemInput struct {
	ByID          *types.ItemID     `json:"ById"`
	WithStructure *DefinedItemInput `json:"WithStructure"`
}

type OIDCProviderInput struct {
	Name string `json:"Name"`
}

type RootUser struct {
	ID   types.SpecialUserID `json:"ID"`
	Name string              `json:"Name"`
}

func (Self) IsUser() {}

type UserInput struct {
	Name string `json:"Name"`
}
